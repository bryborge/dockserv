version: "3.9"

networks:
  default:
    driver: bridge
  reverse_proxy:
    driver: bridge
    name: reverse_proxy
  socket_proxy:
    driver: bridge
    name: socket_proxy

secrets:
  authelia_jwt_secret:
    file: ${DOCKER_DIR}/secrets/authelia_jwt_secret
  authelia_session_redis_password:
    file: ${DOCKER_DIR}/secrets/authelia_session_redis_password
  authelia_session_secret:
    file: ${DOCKER_DIR}/secrets/authelia_session_secret
  authelia_storage_encryption_key:
    file: ${DOCKER_DIR}/secrets/authelia_storage_encryption_key
  authelia_storage_postgres_password:
    file: ${DOCKER_DIR}/secrets/authelia_storage_postgres_password

services:
  ##
  # Docker Socket Proxy
  #   A security-enhanced proxy for the Docker Socket.
  #   For more info: https://hub.docker.com/r/tecnativa/docker-socket-proxy
  socket_proxy:
    container_name: socket_proxy
    environment:
      # Variables match the URL prefix (i.e. AUTH blocks access to /auth/* parts of the API, etc).
      #   0 - revoke access
      #   1 - grant access
      - AUTH=0
      - BUILD=0
      - CONFIGS=0
      - CONTAINERS=1
      - DISTRIBUTION=0
      - EVENTS=1
      - EXEC=0
      - IMAGES=1
      - INFO=1
      - NETWORKS=1
      - NODES=0
      - PLUGINS=0
      - LOG_LEVEL=info # (debug, info, notice, warning, err, crit, alert, emerg)
      - PING=1
      - SERVICES=1
      - SESSION=0
      - SWARM=0
      - SYSTEM=0
      - TASKS=1
      - VERSION=1
      - VOLUMES=1
    image: tecnativa/docker-socket-proxy:0.1.1
    networks:
      socket_proxy:
    ports:
      - target: 2375
        published: 2375
        protocol: tcp
        mode: host
    privileged: true
    restart: unless-stopped
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock

  ##
  # Authelia
  #   An open-source full-featured authentication server.
  #   For more info: https://hub.docker.com/r/authelia/authelia
  authelia:
    container_name: authelia
    depends_on:
      - postgres
      - redis
    environment:
      - AUTHELIA_JWT_SECRET_FILE=/run/secrets/authelia_jwt_secret
      - AUTHELIA_SESSION_REDIS_PASSWORD_FILE=/run/secrets/authelia_session_redis_password
      - AUTHELIA_SESSION_SECRET_FILE=/run/secrets/authelia_session_secret
      - AUTHELIA_STORAGE_ENCRYPTION_KEY_FILE=/run/secrets/authelia_storage_encryption_key
      - AUTHELIA_STORAGE_POSTGRES_PASSWORD_FILE=/run/secrets/authelia_storage_postgres_password
      - DOMAIN_NAME=${DOMAIN_NAME}
      - TZ=${TZ}
    image: authelia/authelia:4.34.4
    labels:
      - traefik.enable=true
      - traefik.http.routers.authelia-rtr.entrypoints=https
      - traefik.http.routers.authelia-rtr.rule=Host(`authelia.${DOMAIN_NAME}`)
      - traefik.http.routers.authelia-rtr.tls=true
      - traefik.http.routers.authelia-rtr.middlewares=chain-authelia@file
      - traefik.http.routers.authelia-rtr.service=authelia-svc
      - traefik.http.services.authelia-svc.loadbalancer.server.port=9091
    networks:
      - reverse_proxy
    restart: unless-stopped
    secrets:
      - authelia_jwt_secret
      - authelia_session_redis_password
      - authelia_session_secret
      - authelia_storage_encryption_key
      - authelia_storage_postgres_password
    volumes:
      - ${DOCKER_DIR}/appdata/authelia:/config

  ##
  # Traefik
  #   An Open Source Edge Router that makes publishing your services a fun and easy experience.
  #   For more info:
  #     - https://doc.traefik.io/traefik/
  #     - https://hub.docker.com/_/traefik
  traefik:
    command:
      # Traefik CLi Documentation: https://doc.traefik.io/traefik/reference/static-configuration/cli-ref/
      - --accessLog=true
      - --accessLog.filePath=/etc/traefik/log/traefik.log
      - --accessLog.bufferingSize=100
      - --accessLog.filters.statusCodes=400-499
      - --api=true
      - --api.dashboard=true
      - --certificatesResolvers.dns-cloudflare.acme.dnsChallenge.provider=cloudflare
      - --certificatesResolvers.dns-cloudflare.acme.dnsChallenge.resolvers=1.1.1.1:53,1.0.0.1:53
      - --certificatesResolvers.dns-cloudflare.acme.dnsChallenge.delayBeforeCheck=90
      - --certificatesResolvers.dns-cloudflare.acme.email=${CLOUDFLARE_EMAIL}
      - --certificatesResolvers.dns-cloudflare.acme.storage=/etc/traefik/acme/acme.json
      - --entryPoints.http.address=:80
      - --entryPoints.https.address=:443
      - --entryPoints.traefik.address=:8080
      - --entryPoints.https.http.tls.certresolver=dns-cloudflare
      - --entryPoints.https.http.tls.domains[0].main=${DOMAIN_NAME}
      - --entryPoints.https.http.tls.domains[0].sans=*.${DOMAIN_NAME}
      - --global.checkNewVersion=true
      - --global.sendAnonymousUsage=false
      - --log=true
      - --log.level=WARN # (Default: ERROR) DEBUG, INFO, WARN, ERROR, FATAL, PANIC
      - --providers.docker=true
      - --providers.docker.endpoint=tcp://socket-proxy:2375
      - --providers.docker.exposedByDefault=false
      - --providers.docker.network=reverse_proxy
      - --providers.file.directory=/etc/traefik/rules
      - --providers.file.watch=true # watch top-level rules/ dir for file changes
    container_name: traefik
    environment:
      - ADGUARD_IP=${ADGUARD_IP}
      - ADGUARD_PORT=${ADGUARD_PORT}
      - CF_API_KEY=${CLOUDFLARE_API_KEY}
      - DOMAIN_NAME=${DOMAIN_NAME}
    image: traefik:v2.6.0
    labels:
      - traefik.enable=true
      - traefik.http.middlewares.custom.headers.browserXSSFilter=true
      - traefik.http.middlewares.custom.headers.contentTypeNosniff=true
      - traefik.http.middlewares.custom.headers.forceSTSHeader=true
      - traefik.http.middlewares.custom.headers.frameDeny=true
      - traefik.http.middlewares.custom.headers.sslredirect=true
      - traefik.http.middlewares.custom.headers.stsIncludeSubdomains=true
      - traefik.http.middlewares.custom.headers.stsPreload=true
      - traefik.http.middlewares.custom.headers.stsSeconds=315360000
      # Redirect to https
      - traefik.http.routers.traefik-rtr.entrypoints=http
      - traefik.http.routers.traefik-rtr.middlewares=admin
      - traefik.http.routers.traefik-rtr.rule=HostRegexp(`{host:.+}`)
      - traefik.http.middlewares.redirect-to-https.redirectscheme.scheme=https
      # Routers
      - traefik.http.routers.traefik-rtr.entrypoints=https
      - traefik.http.routers.traefik-rtr.rule=Host(`traefik.${DOMAIN_NAME}`)
      # Secure Dashboard w/ Authelia
      - traefik.http.routers.traefik-rtr.middlewares=chain-authelia@file
      # Services - API
      - traefik.http.routers.traefik-rtr.service=api@internal
      - traefik.http.routers.traefik-rtr.tls.certresolver=dns-cloudflare
    networks:
      reverse_proxy:
      socket_proxy:
    ports:
      - target: 80
        published: 80
        protocol: tcp
        mode: host
      - target: 443
        published: 443
        protocol: tcp
        mode: host
    restart: unless-stopped
    volumes:
      - ${DOCKER_DIR}/appdata/traefik/rules:/etc/traefik/rules
      - ${DOCKER_DIR}/appdata/traefik/acme:/etc/traefik/acme
      - ${DOCKER_DIR}/appdata/traefik/log:/etc/traefik/log

  ##
  # Glances
  #   Web UI for system information monitoring.
  #   For more info:
  #     - https://nicolargo.github.io/glances/
  glances:
    container_name: glances
    environment:
      GLANCES_OPT: '-w'
      DOCKER_HOST: tcp://socket_proxy:2375
    image: nicolargo/glances:latest
    labels:
      - traefik.enable=true
      - traefik.http.routers.glances-rtr.entrypoints=https
      - traefik.http.routers.glances-rtr.rule=Host(`glances.${DOMAIN_NAME}`)
      - traefik.http.routers.glances-rtr.middlewares=chain-authelia@file
      - traefik.http.routers.glances-rtr.service=glances-svc
      - traefik.http.services.glances-svc.loadbalancer.server.port=61208
    networks:
      - default
      - reverse_proxy
      - socket_proxy
    pid: host
    restart: unless-stopped
#    volumes:
#      - ${DOCKER_DIR}/appdata/glances/glances.conf:/glances/conf/glances.conf

  ##
  # Portainer
  #   Web UI for docker container management.
  #   For more info:
  #     - https://www.portainer.io/
  portainer:
    command: -H tcp://socket_proxy:2375
    container_name: portainer
    environment:
      - TZ=${TZ}
    image: portainer/portainer-ce:2.11.1
    labels:
      - traefik.enable=true
      - traefik.http.routers.portainer-rtr.entrypoints=https
      - traefik.http.routers.portainer-rtr.rule=Host(`portainer.${DOMAIN_NAME}`)
      - traefik.http.routers.portainer-rtr.middlewares=chain-authelia@file
      - traefik.http.routers.portainer-rtr.service=portainer-svc
      - traefik.http.services.portainer-svc.loadbalancer.server.port=9000
    networks:
      - reverse_proxy
      - socket_proxy
    restart: unless-stopped
    volumes:
      - ${DOCKER_DIR}/appdata/portainer/data:/data

  ##
  # Plex
  #   A global streaming media service and client-server media platform.
  #   For more info:
  #     - https://www.plex.tv/
  plex:
    container_name: plex
    environment:
      - TZ=${TZ}
      - HOSTNAME="Plex"
      - PLEX_CLAIM=${PLEX_CLAIM}
      - PLEX_UID=${PUID}
      - PLEX_GID=${PGID}
      - ADVERTISE_IP=${ADVERTISE_IP}
    image: plexinc/pms-docker:1.25.4.5487-648a8f9f9
    labels:
      - traefik.enable=true
      - traefik.http.middlewares.custom.headers.browserXSSFilter=true
      - traefik.http.middlewares.custom.headers.contentTypeNosniff=true
      - traefik.http.middlewares.custom.headers.forceSTSHeader=true
      - traefik.http.middlewares.custom.headers.frameDeny=true
      - traefik.http.middlewares.custom.headers.sslredirect=true
      - traefik.http.middlewares.custom.headers.stsIncludeSubdomains=true
      - traefik.http.middlewares.custom.headers.stsPreload=true
      - traefik.http.middlewares.custom.headers.stsSeconds=315360000
      - traefik.http.routers.plex-rtr.entrypoints=https
      - traefik.http.routers.plex-rtr.rule=Host(`plex.${DOMAIN_NAME}`)
      - traefik.http.routers.plex-rtr.tls.certresolver=dns-cloudflare
      - traefik.http.services.plex-svc.loadbalancer.server.port=32400
    networks:
      reverse_proxy:
      socket_proxy:
    restart: unless-stopped
    ports:
      # TCP
      - target: 32400
        published: 32400
        protocol: tcp
        mode: host
      - target: 3005
        published: 3005
        protocol: tcp
        mode: host
      - target: 8324
        published: 8324
        protocol: tcp
        mode: host
      - target: 32469
        published: 32469
        protocol: tcp
        mode: host
      # UDP
      - target: 1900
        published: 1900
        protocol: udp
        mode: host
      - target: 32410
        published: 32410
        protocol: udp
        mode: host
      - target: 32412
        published: 32412
        protocol: udp
        mode: host
      - target: 32413
        published: 32413
        protocol: udp
        mode: host
      - target: 32414
        published: 32414
        protocol: udp
        mode: host
    volumes:
      - ${DOCKER_DIR}/appdata/plex/config:/config
      - ${DOCKER_DIR}/appdata/plex/tmp:/transcode
      - /media/nas/media:/media

  ##
  # Postgres
  #   Open-source database management software.
  #   For more info:
  #     - https://www.postgresql.org/
  postgres:
    container_name: postgres
    environment:
      - POSTGRES_USER=authelia
      - POSTGRES_PASSWORD=/run/secrets/authelia_storage_postgres_password
      - TZ=${TZ}
    image: postgres:12.10
    networks:
      reverse_proxy:
    ports:
      - target: 5432
        published: 5432
        protocol: tcp
        mode: host
    restart: unless-stopped
    secrets:
      - authelia_storage_postgres_password
    volumes:
      - ${DOCKER_DIR}/appdata/postgres/data:/config

  ##
  # Redis
  #   Open-source, in-memory, data store.
  #   For more info:
  #     - https://redis.io
  #
  redis:
    container_name: redis
    entrypoint: redis-server --appendonly yes --requirepass ${REDIS_PASSWORD} --maxmemory 512mb --maxmemory-policy allkeys-lru
    environment:
      - REDIS_PASSWORD=${REDIS_PASSWORD}
    image: redis:6.2.6
    networks:
      reverse_proxy:
    ports:
      - target: 6379
        published: 6379
        protocol: tcp
    restart: unless-stopped
    secrets:
      - authelia_session_redis_password
    volumes:
      - ${DOCKER_DIR}/appdata/redis/data:/data
      - /etc/timezone:/etc/timezone:ro
      - /etc/localtime:/etc/localtime:ro
