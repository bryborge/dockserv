version: "3.9"

services:
  traefik:
    # Traefik CLi Documentation: https://doc.traefik.io/traefik/reference/static-configuration/cli-ref/
    command:
      - --accessLog=true
      - --accessLog.filePath=/traefik.log
      - --accessLog.bufferingSize=100
      - --accessLog.filters.statusCodes=400-499
      - --api=true
      - --api.dashboard=true
      - --certificatesresolvers.dns-cloudflare.acme.dnsChallenge.provider=cloudflare
      - --certificatesresolvers.dns-cloudflare.acme.dnsChallenge.resolvers=1.1.1.1:53,1.0.0.1:53
      - --certificatesresolvers.dns-cloudflare.acme.dnsChallenge.delayBeforeCheck=90
      - --certificatesresolvers.dns-cloudflare.acme.email=${CF_API_EMAIL}
      - --certificatesresolvers.dns-cloudflare.acme.storage=/etc/traefik/acme/acme.json
      - --entrypoints.http.address=:80
      - --entrypoints.https.address=:443
      - --entrypoints.https.http.tls.certresolver=dns-cloudflare
      - --entrypoints.https.http.tls.domains[0].main=$DOMAIN_NAME
      - --entrypoints.https.http.tls.domains[0].sans=*.$DOMAIN_NAME
      - --global.checkNewVersion=true
      - --global.sendAnonymousUsage=false
      - --log=true
      - --log.level=WARN # (Default: ERROR) DEBUG, INFO, WARN, ERROR, FATAL, PANIC
      - --providers.docker=true
      # TODO: Look into socket proxy
#      - --providers.docker.endpoint=tcp://socket-proxy:2375
      - --providers.docker.exposedByDefault=false
      - --providers.docker.network=traefik_proxy
    container_name: traefik
    environment:
      - CF_API_EMAIL=${CLOUDFLARE_EMAIL}
      - CF_API_KEY=${CLOUDFLARE_API_KEY}
    image: traefik:v2.6.0
    labels:
      - traefik.enable=true
      - traefik.http.middlewares.custom.headers.browserXSSFilter=true
      - traefik.http.middlewares.custom.headers.contentTypeNosniff=true
      - traefik.http.middlewares.custom.headers.forceSTSHeader=true
      - traefik.http.middlewares.custom.headers.frameDeny=true
      - traefik.http.middlewares.custom.headers.sslredirect=true
      - traefik.http.middlewares.custom.headers.stsIncludeSubdomains=true
      - traefik.http.middlewares.custom.headers.stsPreload=true
      - traefik.http.middlewares.custom.headers.stsSeconds=315360000
      # Secure Dashboard
      # TODO: Look into oauth
      - traefik.http.middlewares.admin.basicauth.usersfile=/etc/traefik/config/usersfile
      # Redirect to https
      - traefik.http.routers.http-catchall.entrypoints=http
      - traefik.http.routers.http-catchall.middlewares=redirect-to-https
      - traefik.http.routers.http-catchall.rule=HostRegexp(`{host:.+}`)
      - traefik.http.middlewares.redirect-to-https.redirectscheme.scheme=https
      # Routers
      - traefik.http.routers.traefik-rtr.entrypoints=https
      - traefik.http.routers.traefik-rtr.rule=Host(`traefik.$DOMAIN_NAME`)
      # Services - API
      - traefik.http.routers.traefik-rtr.service=api@internal
      - traefik.http.routers.traefik.middlewares=admin
      - traefik.http.routers.traefik.rule=Host(`traefik.${DOMAIN_NAME}`)
      - traefik.http.routers.traefik.tls.certresolver=letsencrypt
    networks:
      traefik_proxy:
    ports:
      - "80:80"
      - "443:443"
    restart: unless-stopped
    volumes:
      - $DOCKER_DIR/appdata/traefik/config:/etc/traefik/config
      - $DOCKER_DIR/appdata/traefik/acme:/etc/traefik/acme
      - $DOCKER_DIR/appdata/traefik/log:/etc/traefik/log

networks:
  default:
    driver: bridge
  traefik_proxy:
    external: true
