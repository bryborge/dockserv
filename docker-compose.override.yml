##
# ADDITIONAL APPS
#
version: '3.9'

##
# SECRETS
#
secrets:
  plex_claim:
    file: ${DOCKER_DIR}/secrets/plex_claim_token

##
# EXTENSION FIELDS
#
x-environment: &pgid-puid-tz
  PGID: ${PGID}
  PUID: ${PUID}
  TZ: ${TZ}

##
# SERVICES
#
services:
  ##
  # Glances
  #   Web UI for system information monitoring.
  #   For more info:
  #     - https://nicolargo.github.io/glances/
  glances:
    container_name: glances
    environment:
      <<: *pgid-puid-tz
      GLANCES_OPT: '-w'
      DOCKER_HOST: tcp://socket_proxy:2375
    image: nicolargo/glances:latest
    labels:
      - traefik.enable=true
      - traefik.http.routers.glances-rtr.entrypoints=https
      - traefik.http.routers.glances-rtr.rule=Host(`glances.${DOMAIN_NAME}`)
      - traefik.http.routers.glances-rtr.middlewares=chain-authelia@file
      - traefik.http.routers.glances-rtr.service=glances-svc
      - traefik.http.services.glances-svc.loadbalancer.server.port=61208
    networks:
      default:
      reverse_proxy:
      socket_proxy:
    pid: host
    restart: unless-stopped
    security_opt:
      - no-new-privileges:true

  ##
  # Heimdall
  #   A dashboard for all your web applications.
  #   For more info:
  #     - https://heimdall.site/
  heimdall:
    container_name: heimdall
    environment:
      <<: *pgid-puid-tz
    image: lscr.io/linuxserver/heimdall
    labels:
      - traefik.enable=true
      - traefik.http.routers.heimdall-rtr.entrypoints=https
      - traefik.http.routers.heimdall-rtr.rule=Host(`apps.${DOMAIN_NAME}`)
      - traefik.http.routers.heimdall-rtr.middlewares=chain-authelia@file
      - traefik.http.routers.heimdall-rtr.service=heimdall-svc
      - traefik.http.services.heimdall-svc.loadbalancer.server.port=80
    networks:
      reverse_proxy:
    restart: unless-stopped
    volumes:
      - $DOCKER_DIR/appdata/heimdall:/config

  ##
  #
  #
  nextcloud:
    container_name: nextcloud
    depends_on:
      - postgres
      - redis
    environment:
      <<: *pgid-puid-tz
      POSTGRES_HOST: postgres
      REDIS_HOST: redis
    image: nextcloud:24.0.0
    labels:
      - traefik.enable=true
      - traefik.http.middlewares.custom.headers.browserXSSFilter=true
      - traefik.http.middlewares.custom.headers.contentTypeNosniff=true
      - traefik.http.middlewares.custom.headers.forceSTSHeader=true
      - traefik.http.middlewares.custom.headers.frameDeny=true
      - traefik.http.middlewares.custom.headers.sslredirect=true
      - traefik.http.middlewares.custom.headers.stsIncludeSubdomains=true
      - traefik.http.middlewares.custom.headers.stsPreload=true
      - traefik.http.middlewares.custom.headers.stsSeconds=315360000
      - traefik.http.routers.nextcloud-rtr.entrypoints=https
      - traefik.http.routers.nextcloud-rtr.rule=Host(`nextcloud.${DOMAIN_NAME}`)
      - traefik.http.routers.nextcloud-rtr.middlewares=chain-authelia@file
      - traefik.http.routers.nextcloud-rtr.service=nextcloud-svc
      - traefik.http.services.nextcloud-svc.loadbalancer.server.port=80
    networks:
      reverse_proxy:
    restart: unless-stopped
    security_opt:
      - no-new-privileges:true
    volumes:
      - $DOCKER_DIR/appdata/nextcloud/html:/var/www/html
      - $DOCKER_DIR/appdata/nextcloud/config:/var/www/html/config
      - $DOCKER_DIR/appdata/nextcloud/custom_apps:/var/www/html/custom_apps
      - $DOCKER_DIR/appdata/nextcloud/data:/var/www/html/data
      - $DOCKER_DIR/appdata/nextcloud/themes:/var/www/html/themes
      - /etc/localtime:/etc/localtime:ro

  ##
  # Plex
  #   A global streaming media service and client-server media platform.
  #   For more info:
  #     - https://www.plex.tv/
  plex:
    container_name: plex
    environment:
      <<: *pgid-puid-tz
      ADVERTISE_IP: ${HOST_IP}:32400
      HOSTNAME: "Plex"
      PLEX_CLAIM: /run/secrets/plex_claim
    image: plexinc/pms-docker:1.25.4.5487-648a8f9f9
    labels:
      - traefik.enable=true
      - traefik.http.middlewares.custom.headers.browserXSSFilter=true
      - traefik.http.middlewares.custom.headers.contentTypeNosniff=true
      - traefik.http.middlewares.custom.headers.forceSTSHeader=true
      - traefik.http.middlewares.custom.headers.frameDeny=true
      - traefik.http.middlewares.custom.headers.sslredirect=true
      - traefik.http.middlewares.custom.headers.stsIncludeSubdomains=true
      - traefik.http.middlewares.custom.headers.stsPreload=true
      - traefik.http.middlewares.custom.headers.stsSeconds=315360000
      - traefik.http.routers.plex-rtr.entrypoints=https
      - traefik.http.routers.plex-rtr.rule=Host(`plex.${DOMAIN_NAME}`)
      - traefik.http.routers.plex-rtr.tls.certresolver=dns-cloudflare
      - traefik.http.services.plex-svc.loadbalancer.server.port=32400
    networks:
      reverse_proxy:
    ports:
      # TCP
      - target: 32400
        published: 32400
        protocol: tcp
        mode: host
      - target: 3005
        published: 3005
        protocol: tcp
        mode: host
      - target: 8324
        published: 8324
        protocol: tcp
        mode: host
      - target: 32469
        published: 32469
        protocol: tcp
        mode: host
      # UDP
      - target: 1900
        published: 1900
        protocol: udp
        mode: host
      - target: 32410
        published: 32410
        protocol: udp
        mode: host
      - target: 32412
        published: 32412
        protocol: udp
        mode: host
      - target: 32413
        published: 32413
        protocol: udp
        mode: host
      - target: 32414
        published: 32414
        protocol: udp
        mode: host
    restart: unless-stopped
    secrets:
      - plex_claim
    security_opt:
      - no-new-privileges:true
    volumes:
      - ${DOCKER_DIR}/appdata/plex/config:/config
      - ${DOCKER_DIR}/appdata/plex/tmp:/transcode
      - /media/nas/media:/media

  ##
  # Portainer
  #   Web UI for docker container management.
  #   For more info:
  #     - https://www.portainer.io/
  portainer:
    command: -H tcp://socket_proxy:2375
    container_name: portainer
    environment:
      <<: *pgid-puid-tz
    image: portainer/portainer-ce:2.11.1
    labels:
      - traefik.enable=true
      - traefik.http.routers.portainer-rtr.entrypoints=https
      - traefik.http.routers.portainer-rtr.rule=Host(`portainer.${DOMAIN_NAME}`)
      - traefik.http.routers.portainer-rtr.middlewares=chain-authelia@file
      - traefik.http.routers.portainer-rtr.service=portainer-svc
      - traefik.http.services.portainer-svc.loadbalancer.server.port=9000
    networks:
      reverse_proxy:
      socket_proxy:
    restart: unless-stopped
    security_opt:
      - no-new-privileges:true
    volumes:
      - ${DOCKER_DIR}/appdata/portainer/data:/data
